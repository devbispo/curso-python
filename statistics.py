# -*- coding: utf-8 -*-
"""Lista 5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m07IsL7XTAZ1X22cpGHIHk3dN_ywqhC3
"""

# Commented out IPython magic to ensure Python compatibility.
# %reset -f 
#resolução da questão 1 da lista 5
import pandas as pd
import seaborn as sn
print("Quetão 1")
lista_matematica_musica ={'matematica' : [60,58,73,51,54,75,48,72,75,83,62,52], 'musica' : [80,62,70,83,62,92,79,88,54,82,64,69]} 
df = pd.DataFrame(lista_matematica_musica)
cr = df.corr()
print(cr)

# Commented out IPython magic to ensure Python compatibility.
# %reset -f 
#resolução da questão 2 da lista 5(somente um comentario)
print('Questão 2')
print('indica uma correlação desprezível.')

# Commented out IPython magic to ensure Python compatibility.
# %reset -f 
#resolução da questão 3 da lista 5
import pandas as pd
import seaborn as sn
print('Questão 3 ')
funcionarios = {'Anos de serviço ' :[2,3,4,5,4,6,7,8,8,10], 'Nº de Clientes ' :[48,50,56,52,43,60,62,58,64,72]}
df = pd.DataFrame(funcionarios)
cr = df.corr()
print(cr)

# Commented out IPython magic to ensure Python compatibility.
# %reset -f 
#resolução da questão 4 da lista 5
import pandas as pd
import seaborn as sn
print('Questão 4')
familia = {'X':[12,16,18,20,28,30,40,48,50,54], 'Y':[7.2,7.4,7.0,6.5,6.6,6.7,6.0,5.6,6.0,5.5]}
df= pd.DataFrame(familia)
cr = df.corr()
print(cr)

# Commented out IPython magic to ensure Python compatibility.
# %reset -f 
#resolução da questão 5 da lista 5(somente a letra b)
import pandas as pd
import seaborn as sn
import matplotlib.pyplot as plt
import statistics
print('Questão 5 \nCoeficiente de correlação')

conjunto1 = {'x':[10,8,13,9,11,14,6,4,12,7,5], 'y':[8.04,6.95,7.58,8.81,8.33,9.96,7.24,4.26,10.84,4.82,5.68]}
conjunto2 = {'x2':[10,8,13,9,11,14,6,4,12,7,5],'Y2':[9.14,8.14,8.74,8.77,9.26,8.10,6.13,3.10,9.13,7.62,4.74]}
conjunto3 = {'x3':[10,8,13,9,11,14,6,4,12,7,5],'y3':[7.46,6.77,12.74,7.11,7.81,8.84,6.08,5.39,8.15,6.42,5.73]}
conjunto4 = {'x4':[8,8,8,8,8,8,8,19,8,8,8], 'y4':[6.58,5.76,7.71,8.84,8.47,7.04,5.25,12.50,5.56,7.91,6.89]}
df=pd.DataFrame(conjunto1)
df2=pd.DataFrame(conjunto2)
df3=pd.DataFrame(conjunto3)
df4=pd.DataFrame(conjunto4)
cr=df.corr()
cr2=df2.corr()
cr3=df3.corr()
cr4=df4.corr()
print('correlação do conjunto 1: \n',cr)
print('correlação do conjunto 2: \n',cr2)
print('correlação do conjunto 3: \n',cr3)
print('correlação do conjunto 4: \n',cr4)

# Commented out IPython magic to ensure Python compatibility.
# %reset -f 
#resolução da questão 6 da lista 5
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
print("Diagrama da questão 6")
alimentação=[4,5,1,3,6,2]
exercicio =[1,3,2,4,5,6]
rodizio=[3,1,2,6,4,5]
x = np.array(alimentação).reshape((-1,1))
y = np.array(exercicio)
z = np.array(rodizio)
modelo = LinearRegression().fit(x,y,z)
plt.scatter(x,y,z, color = 'black')
y_pred = modelo.predict(x)
x_linha = list(range(0,100))
x_linha = np.array(x_linha).reshape((-1,1))
y_linha_pred = modelo.predict(x_linha)
plt.scatter(x_linha, y_linha_pred, color='red')
plt.show()